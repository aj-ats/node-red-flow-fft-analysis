[
    {
        "id": "795cdb52bbd4eb23",
        "type": "tab",
        "label": "Type 80 FFT",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4c6816e9d6fe181b",
        "type": "tab",
        "label": "Setup Gateway",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "796e164c810238d0",
        "type": "ncd-gateway-node",
        "z": "795cdb52bbd4eb23",
        "name": "",
        "connection": "",
        "unknown_devices": 0,
        "outputs": 1,
        "x": 250,
        "y": 300,
        "wires": [
            [
                "5b8e2f2348eedf06"
            ]
        ]
    },
    {
        "id": "8374845c49d5e33f",
        "type": "debug",
        "z": "795cdb52bbd4eb23",
        "name": "debug 27",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 180,
        "wires": []
    },
    {
        "id": "453a728dda4a303d",
        "type": "function",
        "z": "795cdb52bbd4eb23",
        "name": "FFT Converter",
        "func": "var fft = context.global.get('fft');\nvar fftUtil = context.global.get('fftUtil');\n\n// Convert msg.payload.data into an array for easier manipulation\nlet readings = Object.values(msg.payload.data);\n\n// Ensure the number of readings has a number of values equal to\n//   the logarithmic root of 2\nlet log2_readings = 2 ** Math.floor(Math.log2(readings.length));\n\n\n// Reduce the size of the reading array to discard unused values\nreadings = readings.slice(0, log2_readings);\n\n// Instantiate per axis readings\nvar x_readings = [];\nvar y_readings = [];\nvar z_readings = [];\n// Loop through each reading to split into axis\nfor(let reading in readings){\n    x_readings[reading] = readings[reading]['x'];\n    y_readings[reading] = readings[reading]['y'];\n    z_readings[reading] = readings[reading]['z'];\n}\n\n\n// Calculate frequency based on number of readings and ODR\nlet fft_frequency = fftUtil.fftFreq(readings, msg.payload.odr);\n\n// Calculate the X axis FFT data fft returns real and imaginary numbers so we will split them later\nlet fft_x_data = fft(x_readings);\nlet fft_x_magnitude = fftUtil.fftMag(fft_x_data);\n// Split the real and imaginary values\nlet fft_x_real = [1,1];\nlet fft_x_imaginary = [];\nfft_x_data.forEach(function(reading){\n    fft_x_real.push(reading[0]);\n    fft_x_imaginary.push(reading[1]);\n});\n\nlet fft_y_data = fft(y_readings);\nlet fft_y_magnitude = fftUtil.fftMag(fft_y_data);\nlet fft_y_real = [];\nlet fft_y_imaginary = [];\nfft_y_data.forEach(function (reading) {\n    fft_y_real.push(reading[0]);\n    fft_y_imaginary.push(reading[1]);\n});\n\nlet fft_z_data = fft(z_readings);\nlet fft_z_magnitude = fftUtil.fftMag(fft_z_data);\nlet fft_z_real = [];\nlet fft_z_imaginary = [];\nfft_z_data.forEach(function (reading) {\n    fft_z_real.push(reading[0]);\n    fft_z_imaginary.push(reading[1]);\n});\n\n// Finally build the fft_data object and add it to the message\nmsg.payload.fft_data = {\n    frequency: fft_frequency,\n    fft_x_data: fft_x_data,\n    fft_x_magnitude: fft_x_magnitude,\n    fft_x_real: fft_x_real,\n    fft_x_imaginary: fft_x_imaginary,\n    fft_y_data: fft_y_data,\n    fft_y_magnitude: fft_y_magnitude,\n    fft_y_real: fft_y_real,\n    fft_y_imaginary: fft_y_imaginary,\n    fft_z_data: fft_z_data,\n    fft_z_magnitude: fft_z_magnitude,\n    fft_z_real: fft_z_real,\n    fft_z_imaginary: fft_z_imaginary\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 240,
        "wires": [
            [
                "d68eafd9e213dc33"
            ]
        ]
    },
    {
        "id": "5b8e2f2348eedf06",
        "type": "debug",
        "z": "795cdb52bbd4eb23",
        "name": "debug 30",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 300,
        "wires": []
    },
    {
        "id": "d68eafd9e213dc33",
        "type": "debug",
        "z": "795cdb52bbd4eb23",
        "name": "debug 31",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 240,
        "wires": []
    },
    {
        "id": "dc76869049956d99",
        "type": "switch",
        "z": "795cdb52bbd4eb23",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "sensor_data",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 550,
        "y": 240,
        "wires": [
            [
                "453a728dda4a303d"
            ]
        ]
    },
    {
        "id": "a44276b1aefb48ae",
        "type": "ncd-wireless-node",
        "z": "795cdb52bbd4eb23",
        "name": "",
        "connection": "",
        "config_comm": "",
        "addr": "",
        "sensor_type": "80",
        "auto_config": true,
        "on_the_fly_enable": true,
        "node_id_delay_active": true,
        "node_id": "0",
        "delay": "0",
        "form_network": true,
        "destination_active": true,
        "destination": "0000FFFF",
        "power_active": false,
        "power": 4,
        "retries_active": false,
        "retries": 10,
        "pan_id_active": false,
        "pan_id": "7FFF",
        "change_enabled": "",
        "change_pr": "0",
        "change_interval": "0",
        "cm_calibration": "60.6",
        "bp_altitude": "0",
        "bp_pressure": "0",
        "bp_temp_prec": "0",
        "bp_press_prec": "0",
        "amgt_accel": "0",
        "amgt_mag": "0",
        "amgt_gyro": "0",
        "impact_accel_active": false,
        "impact_accel": "0",
        "impact_data_rate_active": false,
        "impact_data_rate": "4",
        "impact_threshold_active": false,
        "impact_threshold": 25,
        "impact_duration_active": false,
        "impact_duration": 1,
        "activ_interr_x": 1,
        "activ_interr_y": 2,
        "activ_interr_z": 4,
        "activ_interr_op": 8,
        "force_calibration_co2_auto_config": "",
        "force_calibration_co2": 400,
        "filtering": 0,
        "data_rate": 5,
        "time_series": 0,
        "reading_type": 1,
        "mode_80_active": true,
        "mode_80": "1",
        "measurement_mode_80_active": false,
        "measurement_mode_80": 0,
        "on_request_timeout_80_active": false,
        "on_request_timeout_80": "4",
        "sensor_boot_time_420ma_active": false,
        "sensor_boot_time_420ma": "0",
        "sensor_boot_time_78_active": false,
        "sensor_boot_time_78": "0",
        "deadband_80_active": "",
        "deadband_80": 0,
        "filter_80_active": false,
        "filter_80": "1",
        "output_data_rate_p1_81_active": true,
        "output_data_rate_p1_81": "15",
        "output_data_rate_p2_81_active": true,
        "output_data_rate_p2_81": "15",
        "sampling_duration_p1_81_active": true,
        "sampling_duration_p1_81": "10",
        "sampling_duration_p2_81_active": true,
        "sampling_duration_p2_81": "10",
        "led_alert_mode_84_active": "",
        "led_alert_mode_84": 0,
        "led_accelerometer_threshold_84_active": "",
        "led_accelerometer_threshold_84": "",
        "led_velocity_threshold_84_active": "",
        "led_velocity_threshold_84": "",
        "acceleration_interrupt_threshold_84_active": "",
        "acceleration_interrupt_threshold_84": "",
        "set_rtc_101": true,
        "current_calibration_82": "",
        "current_calibration_82_active": false,
        "current_calibration_c1_80": 178,
        "current_calibration_c1_80_active": "",
        "current_calibration_c2_80": 178,
        "current_calibration_c2_80_active": "",
        "current_calibration_c3_80": 178,
        "current_calibration_c3_80_active": "",
        "output_data_rate_101_active": true,
        "output_data_rate_101": "15",
        "output_data_rate_101_m2_active": "",
        "output_data_rate_101_m2": 0,
        "sampling_duration_101_active": true,
        "sampling_duration_101": "10",
        "sampling_interval_101_active": false,
        "sampling_interval_101": "0",
        "full_scale_range_101_active": false,
        "full_scale_range_101": "0",
        "full_scale_range_101_m2_active": "",
        "full_scale_range_101_m2": 1,
        "x_axis_101": "",
        "y_axis_101": "",
        "z_axis_101": "",
        "low_pass_filter_80_active": false,
        "low_pass_filter_80": 0,
        "high_pass_filter_80_active": false,
        "high_pass_filter_80": "9",
        "low_pass_filter_81_p2_active": true,
        "low_pass_filter_81_p2": 0,
        "high_pass_filter_81_p2_active": false,
        "high_pass_filter_81_p2": "9",
        "roll_angle_threshold_47": "0",
        "roll_angle_threshold_47_active": false,
        "pitch_angle_threshold_47": "0",
        "pitch_angle_threshold_47_active": false,
        "counter_threshold_35": "50",
        "counter_threshold_35_active": false,
        "payload_length_80_active": false,
        "payload_length_80": "3",
        "motion_threshold_46_active": false,
        "motion_threshold_46": "100",
        "low_calibration_420ma_active": false,
        "low_calibration_420ma": "68805",
        "mid_calibration_420ma_active": false,
        "mid_calibration_420ma": "68724",
        "high_calibration_420ma_active": false,
        "high_calibration_420ma": "68714",
        "x": 210,
        "y": 240,
        "wires": [
            [
                "8374845c49d5e33f",
                "dc76869049956d99"
            ]
        ]
    },
    {
        "id": "22005b637570aee8",
        "type": "inject",
        "z": "4c6816e9d6fe181b",
        "name": "Change settings.js file",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 240,
        "wires": [
            [
                "7821f8b1cc33ab46"
            ]
        ]
    },
    {
        "id": "7821f8b1cc33ab46",
        "type": "file in",
        "z": "4c6816e9d6fe181b",
        "name": "",
        "filename": "/home/ncdio/.node-red/settings.js",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 520,
        "y": 240,
        "wires": [
            [
                "f9e72f7a460ecfbd"
            ]
        ]
    },
    {
        "id": "f9e72f7a460ecfbd",
        "type": "function",
        "z": "4c6816e9d6fe181b",
        "name": "function 1",
        "func": "msg.payload = msg.payload.replace(\"// os:require('os'),\", \"    fft: require('fft-js').fft, fftUtil: require('fft-js').util\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 240,
        "wires": [
            [
                "8e094927eceeb5f2"
            ]
        ]
    },
    {
        "id": "8e094927eceeb5f2",
        "type": "file",
        "z": "4c6816e9d6fe181b",
        "name": "",
        "filename": "/home/ncdio/.node-red/settings.js",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1160,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "5e7593e6dd902fba",
        "type": "inject",
        "z": "4c6816e9d6fe181b",
        "name": "Install fft-js in ~/.node-red",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 320,
        "wires": [
            [
                "63051d4f28be6759"
            ]
        ]
    },
    {
        "id": "12d1aea2d309bea3",
        "type": "inject",
        "z": "4c6816e9d6fe181b",
        "name": "Restart Node-Red",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 400,
        "wires": [
            [
                "98af8d7ea24599d5"
            ]
        ]
    },
    {
        "id": "63051d4f28be6759",
        "type": "exec",
        "z": "4c6816e9d6fe181b",
        "command": "npm install --prefix ~/.node-red fft-js",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 530,
        "y": 320,
        "wires": [
            [
                "a47ab22cebab2298"
            ],
            [
                "a47ab22cebab2298"
            ],
            [
                "a47ab22cebab2298"
            ]
        ]
    },
    {
        "id": "98af8d7ea24599d5",
        "type": "exec",
        "z": "4c6816e9d6fe181b",
        "command": "pm2 restart all",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 460,
        "y": 400,
        "wires": [
            [
                "731f406929f345be"
            ],
            [
                "731f406929f345be"
            ],
            [
                "731f406929f345be"
            ]
        ]
    },
    {
        "id": "a47ab22cebab2298",
        "type": "debug",
        "z": "4c6816e9d6fe181b",
        "name": "debug 34",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 320,
        "wires": []
    },
    {
        "id": "731f406929f345be",
        "type": "debug",
        "z": "4c6816e9d6fe181b",
        "name": "debug 35",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 400,
        "wires": []
    }
]
